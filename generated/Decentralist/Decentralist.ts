// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BondSet extends ethereum.Event {
  get params(): BondSet__Params {
    return new BondSet__Params(this);
  }
}

export class BondSet__Params {
  _event: BondSet;

  constructor(event: BondSet) {
    this._event = event;
  }

  get bondAmount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class LivenessSet extends ethereum.Event {
  get params(): LivenessSet__Params {
    return new LivenessSet__Params(this);
  }
}

export class LivenessSet__Params {
  _event: LivenessSet;

  constructor(event: LivenessSet) {
    this._event = event;
  }

  get liveness(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RevisionApproved extends ethereum.Event {
  get params(): RevisionApproved__Params {
    return new RevisionApproved__Params(this);
  }
}

export class RevisionApproved__Params {
  _event: RevisionApproved;

  constructor(event: RevisionApproved) {
    this._event = event;
  }

  get revisionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposedPrice(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RevisionExecuted extends ethereum.Event {
  get params(): RevisionExecuted__Params {
    return new RevisionExecuted__Params(this);
  }
}

export class RevisionExecuted__Params {
  _event: RevisionExecuted;

  constructor(event: RevisionExecuted) {
    this._event = event;
  }

  get revisionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposedPrice(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get revisedAddresses(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }
}

export class RevisionProposed extends ethereum.Event {
  get params(): RevisionProposed__Params {
    return new RevisionProposed__Params(this);
  }
}

export class RevisionProposed__Params {
  _event: RevisionProposed;

  constructor(event: RevisionProposed) {
    this._event = event;
  }

  get revisionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposedPrice(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get pendingAddresses(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }
}

export class RevisionRejected extends ethereum.Event {
  get params(): RevisionRejected__Params {
    return new RevisionRejected__Params(this);
  }
}

export class RevisionRejected__Params {
  _event: RevisionRejected;

  constructor(event: RevisionRejected) {
    this._event = event;
  }

  get revisionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposedPrice(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RewardsSet extends ethereum.Event {
  get params(): RewardsSet__Params {
    return new RewardsSet__Params(this);
  }
}

export class RewardsSet__Params {
  _event: RewardsSet;

  constructor(event: RewardsSet) {
    this._event = event;
  }

  get addReward(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get removeReward(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Decentralist__revisionsResult {
  value0: Address;
  value1: Bytes;
  value2: BigInt;
  value3: i32;

  constructor(value0: Address, value1: Bytes, value2: BigInt, value3: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytes(this.value1));
    map.set("value2", ethereum.Value.fromSignedBigInt(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    return map;
  }

  getProposer(): Address {
    return this.value0;
  }

  getAddressesHash(): Bytes {
    return this.value1;
  }

  getProposedPrice(): BigInt {
    return this.value2;
  }

  getStatus(): i32 {
    return this.value3;
  }
}

export class Decentralist extends ethereum.SmartContract {
  static bind(address: Address): Decentralist {
    return new Decentralist("Decentralist", address);
  }

  addReward(): BigInt {
    let result = super.call("addReward", "addReward():(uint256)", []);

    return result[0].toBigInt();
  }

  try_addReward(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("addReward", "addReward():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  bondAmount(): BigInt {
    let result = super.call("bondAmount", "bondAmount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_bondAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("bondAmount", "bondAmount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  finder(): Address {
    let result = super.call("finder", "finder():(address)", []);

    return result[0].toAddress();
  }

  try_finder(): ethereum.CallResult<Address> {
    let result = super.tryCall("finder", "finder():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  fixedAncillaryData(): Bytes {
    let result = super.call(
      "fixedAncillaryData",
      "fixedAncillaryData():(bytes)",
      []
    );

    return result[0].toBytes();
  }

  try_fixedAncillaryData(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "fixedAncillaryData",
      "fixedAncillaryData():(bytes)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  liveness(): BigInt {
    let result = super.call("liveness", "liveness():(uint64)", []);

    return result[0].toBigInt();
  }

  try_liveness(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("liveness", "liveness():(uint64)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  onList(param0: Address): boolean {
    let result = super.call("onList", "onList(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_onList(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("onList", "onList(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  oracle(): Address {
    let result = super.call("oracle", "oracle():(address)", []);

    return result[0].toAddress();
  }

  try_oracle(): ethereum.CallResult<Address> {
    let result = super.tryCall("oracle", "oracle():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  removeReward(): BigInt {
    let result = super.call("removeReward", "removeReward():(uint256)", []);

    return result[0].toBigInt();
  }

  try_removeReward(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("removeReward", "removeReward():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  revisions(param0: BigInt): Decentralist__revisionsResult {
    let result = super.call(
      "revisions",
      "revisions(uint256):(address,bytes32,int256,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Decentralist__revisionsResult(
      result[0].toAddress(),
      result[1].toBytes(),
      result[2].toBigInt(),
      result[3].toI32()
    );
  }

  try_revisions(
    param0: BigInt
  ): ethereum.CallResult<Decentralist__revisionsResult> {
    let result = super.tryCall(
      "revisions",
      "revisions(uint256):(address,bytes32,int256,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Decentralist__revisionsResult(
        value[0].toAddress(),
        value[1].toBytes(),
        value[2].toBigInt(),
        value[3].toI32()
      )
    );
  }

  title(): string {
    let result = super.call("title", "title():(string)", []);

    return result[0].toString();
  }

  try_title(): ethereum.CallResult<string> {
    let result = super.tryCall("title", "title():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ExecuteRevisionCall extends ethereum.Call {
  get inputs(): ExecuteRevisionCall__Inputs {
    return new ExecuteRevisionCall__Inputs(this);
  }

  get outputs(): ExecuteRevisionCall__Outputs {
    return new ExecuteRevisionCall__Outputs(this);
  }
}

export class ExecuteRevisionCall__Inputs {
  _call: ExecuteRevisionCall;

  constructor(call: ExecuteRevisionCall) {
    this._call = call;
  }

  get _revisionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _addresses(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class ExecuteRevisionCall__Outputs {
  _call: ExecuteRevisionCall;

  constructor(call: ExecuteRevisionCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _finder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _listCriteria(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _title(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _token(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _bondAmount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _addReward(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _removeReward(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _liveness(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _owner(): Address {
    return this._call.inputValues[8].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PriceSettledCall extends ethereum.Call {
  get inputs(): PriceSettledCall__Inputs {
    return new PriceSettledCall__Inputs(this);
  }

  get outputs(): PriceSettledCall__Outputs {
    return new PriceSettledCall__Outputs(this);
  }
}

export class PriceSettledCall__Inputs {
  _call: PriceSettledCall;

  constructor(call: PriceSettledCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get timestamp(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get ancillaryData(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get price(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class PriceSettledCall__Outputs {
  _call: PriceSettledCall;

  constructor(call: PriceSettledCall) {
    this._call = call;
  }
}

export class ProposeRevisionCall extends ethereum.Call {
  get inputs(): ProposeRevisionCall__Inputs {
    return new ProposeRevisionCall__Inputs(this);
  }

  get outputs(): ProposeRevisionCall__Outputs {
    return new ProposeRevisionCall__Outputs(this);
  }
}

export class ProposeRevisionCall__Inputs {
  _call: ProposeRevisionCall;

  constructor(call: ProposeRevisionCall) {
    this._call = call;
  }

  get _price(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _addresses(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class ProposeRevisionCall__Outputs {
  _call: ProposeRevisionCall;

  constructor(call: ProposeRevisionCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetBondCall extends ethereum.Call {
  get inputs(): SetBondCall__Inputs {
    return new SetBondCall__Inputs(this);
  }

  get outputs(): SetBondCall__Outputs {
    return new SetBondCall__Outputs(this);
  }
}

export class SetBondCall__Inputs {
  _call: SetBondCall;

  constructor(call: SetBondCall) {
    this._call = call;
  }

  get _bondAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBondCall__Outputs {
  _call: SetBondCall;

  constructor(call: SetBondCall) {
    this._call = call;
  }
}

export class SetLivenessCall extends ethereum.Call {
  get inputs(): SetLivenessCall__Inputs {
    return new SetLivenessCall__Inputs(this);
  }

  get outputs(): SetLivenessCall__Outputs {
    return new SetLivenessCall__Outputs(this);
  }
}

export class SetLivenessCall__Inputs {
  _call: SetLivenessCall;

  constructor(call: SetLivenessCall) {
    this._call = call;
  }

  get _liveness(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetLivenessCall__Outputs {
  _call: SetLivenessCall;

  constructor(call: SetLivenessCall) {
    this._call = call;
  }
}

export class SetRewardsCall extends ethereum.Call {
  get inputs(): SetRewardsCall__Inputs {
    return new SetRewardsCall__Inputs(this);
  }

  get outputs(): SetRewardsCall__Outputs {
    return new SetRewardsCall__Outputs(this);
  }
}

export class SetRewardsCall__Inputs {
  _call: SetRewardsCall;

  constructor(call: SetRewardsCall) {
    this._call = call;
  }

  get _addReward(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _removeReward(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetRewardsCall__Outputs {
  _call: SetRewardsCall;

  constructor(call: SetRewardsCall) {
    this._call = call;
  }
}

export class SyncOracleCall extends ethereum.Call {
  get inputs(): SyncOracleCall__Inputs {
    return new SyncOracleCall__Inputs(this);
  }

  get outputs(): SyncOracleCall__Outputs {
    return new SyncOracleCall__Outputs(this);
  }
}

export class SyncOracleCall__Inputs {
  _call: SyncOracleCall;

  constructor(call: SyncOracleCall) {
    this._call = call;
  }
}

export class SyncOracleCall__Outputs {
  _call: SyncOracleCall;

  constructor(call: SyncOracleCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
